[tool.poetry]
name = "bingo"
version = "1.2.0"
description = "A bingo board generator using NiceGUI"
authors = ["Offending Commit <offendingcommit@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/offendingcommit/bingo"
package-mode = false
exclude = [".git", ".git/"]

[tool.poetry.dependencies]
python = "^3.12"
nicegui = "^2.11.0"
toml = "^0.10.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
flake8 = "^7.0.0"
black = "^24.2.0"
isort = "^5.13.2"
python-semantic-release = "^9.1.1"
mypy = "^1.15.0"
pytest-bdd = "^8.1.0"
pytest-asyncio = "<1.0"
playwright = "^1.52.0"

[build-system]
requires = ["poetry-core>=1.8"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=src"

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
branch = "main"
changelog_file = "CHANGELOG.md"
build_command = "echo 'Not building package - Docker and Helm charts will be built separately'"
upload_to_pypi = false
upload_to_release = true
commit_message = "chore(release): {version} [skip ci]"
commit_author = "semantic-release <semantic-release@users.noreply.github.com>"
major_on_zero = false
tag_format = "v{version}"

[tool.semantic_release.remote]
type = "github"
repository = "OffendingCommit/commit-bingo"

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.publish]
dist_glob_patterns = []  # No files to upload directly from semantic-release

[tool.black]
line-length = 88
target-version = ["py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | __pycache__
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
skip = [".venv", ".git", "__pycache__", "build", "dist"]